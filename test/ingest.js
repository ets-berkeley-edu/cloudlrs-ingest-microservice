'use strict';

// tests for ingest
// Generated by serverless-mocha-plugin

const mod = require('../index.js');
const mochaPlugin = require('serverless-mocha-plugin');

const lambdaWrapper = mochaPlugin.lambdaWrapper;
const expect = mochaPlugin.chai.expect;
const should = mochaPlugin.chai.should();
const wrapped = lambdaWrapper.wrap(mod, { handler: 'handler' });

describe('ingest', () => {
  before((done) => {
  // lambdaWrapper.init(liveFunction); // Run the deployed lambda
  // TODO: Bootstrap test DB configurations
  // Populate seed data for write creadentials
    done();
  });

  it('implement tests here', (done) => {
    var event = { key1: 1 , key2: 2 };
    wrapped.run(event, (err, response) => {
      console.log(err);
      expect(response).to.be.empty;
      expect(err).to.be.not.empty;
      expect(err).to.be.an('object');
      expect(err.result).to.equal('Failed');
      expect(err.code).to.equal(400);
      expect(err.msg).to.deep.equal('Statement not in xAPI or Caliper format');
    });
    done();
  });
});
